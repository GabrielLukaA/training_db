import java.util.*;

public class Main {

    private static Celular celular1 = new Celular("iPhone 7", 64);
    private static Celular celular2 = new Celular("iPhone 8", 64);
    private static Celular celular3 = new Celular("iPhone 9", 64);
    private static Celular celular4 = new Celular("iPhone X", 64);
    private static Celular celular5 = new Celular("iPhone XR", 64);
    private static Celular celular6 = new Celular("iPhone XS", 64);
    private static Celular celular7 = new Celular("iPhone 11", 64);
    private static Celular celular8 = new Celular("iPhone 11 Pro", 64);
    private static Celular celular9 = new Celular("iPhone 11 Pro Max", 64);
    private static Celular celular10 = new Celular("iPhone 12 Pro Max", 64);
    private static Celular celular11 = new Celular("iPhone 12 Pro", 64);
    private static Celular celular12 = new Celular("iPhone 12", 64);
    private static Celular celular13 = new Celular("iPhone 13", 64);
    private static Celular celular14 = new Celular("iPhone 13 Pro", 64);
    private static Celular celular15 = new Celular("iPhone 13 Pro Max", 64);
    private static Celular celular16 = new Celular("iPhone 14 Pro Max", 64);
    private static Celular celular17 = new Celular("iPhone 14 Pro", 64);
    private static Celular celular18 = new Celular("iPhone 14", 64);
    private static Celular celular19 = new Celular("iPhone 15", 64);
    private static Celular celular20 = new Celular("iPhone 15 Pro", 64);
    private static Celular celular21 = new Celular("iPhone 15 Pro Max", 64);
    private static Celular celular22 = new Celular("Galaxy J1", 64);
    private static Celular celular23 = new Celular("Galaxy J1 Prime", 64);
    private static Celular celular24 = new Celular("Galaxy J2 Prime", 64);
    private static Celular celular25 = new Celular("Galaxy J2", 64);
    private static Celular celular26 = new Celular("Galaxy J3", 64);
    private static Celular celular27 = new Celular("Galaxy J3 Prime", 64);
    private static Celular celular28 = new Celular("Galaxy J3 Prime", 64);
    private static Celular celular29 = new Celular("Galaxy J4", 64);
    private static Celular celular30 = new Celular("Galaxy J4 Prime", 64);
    private static Celular celular31 = new Celular("Galaxy J5", 64);
    private static Celular celular32 = new Celular("Galaxy J5 Prime", 64);
    private static Celular celular33 = new Celular("Galaxy J6", 64);
    private static Celular celular34 = new Celular("Galaxy J6 Prime", 64);
    private static Celular celular35 = new Celular("Galaxy J7", 64);
    private static Celular celular36 = new Celular("Galaxy J7 Prime", 64);
    private static Celular celular37 = new Celular("Galaxy J8", 64);
    private static Celular celular38 = new Celular("Galaxy J8 Prime", 64);
    private static Celular celular39 = new Celular("Galaxy J9", 64);
    private static Celular celular40 = new Celular("Galaxy J9 Prime", 64);
    private static Celular celular41 = new Celular("Redmi Note 9", 64);
    private static Celular celular42 = new Celular("Redmi Note 10", 64);
    private static Celular celular43 = new Celular("Redmi Note 11", 64);
    private static Celular celular44 = new Celular("Motorola MotoG5", 64);
    private static Celular celular45 = new Celular("Motorola MotoG5 Plus", 64);
    private static Celular celular46 = new Celular("Poco X3 Pro", 64, 50);
    private static Celular celular47 = new Celular("Poco X3 Pro", 64, 50);
    private static Celular celular48 = new Celular("Poco X3 Pro", 64, 50);
    private static Celular celular49 = new Celular("Poco X3 Pro", 64, 50);
    private static Celular celular50 = new Celular("Poco X3 Pro", 64, 50);
    private static TreeMap<Long, String> listaTempo = new TreeMap();


    public static void main(String[] args) {
        long inicio = 0;
        long tempo = 0;

        //List

        //ArrayList

        ArrayList<Celular> arrayList = new ArrayList<>();
        inicio = System.nanoTime();
        arrayList.add(celular1);
        arrayList.add(celular2);
        arrayList.add(celular3);
        arrayList.add(celular4);
        arrayList.add(celular5);
        arrayList.add(celular6);
        arrayList.add(celular7);
        arrayList.add(celular8);
        arrayList.add(celular9);
        arrayList.add(celular10);
        arrayList.add(celular11);
        arrayList.add(celular12);
        arrayList.add(celular13);
        arrayList.add(celular14);
        arrayList.add(celular15);
        arrayList.add(celular16);
        arrayList.add(celular17);
        arrayList.add(celular18);
        arrayList.add(celular19);
        arrayList.add(celular20);
        arrayList.add(celular21);
        arrayList.add(celular22);
        arrayList.add(celular23);
        arrayList.add(celular24);
        arrayList.add(celular25);
        arrayList.add(celular26);
        arrayList.add(celular27);
        arrayList.add(celular28);
        arrayList.add(celular29);
        arrayList.add(celular30);
        arrayList.add(celular31);
        arrayList.add(celular32);
        arrayList.add(celular33);
        arrayList.add(celular34);
        arrayList.add(celular35);
        arrayList.add(celular36);
        arrayList.add(celular37);
        arrayList.add(celular38);
        arrayList.add(celular39);
        arrayList.add(celular40);
        arrayList.add(celular41);
        arrayList.add(celular42);
        arrayList.add(celular43);
        arrayList.add(celular44);
        arrayList.add(celular45);
        arrayList.add(celular46);
        arrayList.add(celular47);
        arrayList.add(celular48);
        arrayList.add(celular49);
        arrayList.add(celular50);
        tempo = System.nanoTime() - inicio;
        listaTempo.put(tempo, "Adicionando com ArrayList");

        inicio = System.nanoTime();
        System.out.println(arrayList);
        tempo = System.nanoTime() - inicio;
        listaTempo.put(tempo, "Imprimindo com ArrayList");


        //LinkedList
        LinkedList<Celular> linkedList = new LinkedList<>();
        inicio = System.nanoTime();
        linkedList.add(celular1);
        linkedList.add(celular2);
        linkedList.add(celular3);
        linkedList.add(celular4);
        linkedList.add(celular5);
        linkedList.add(celular6);
        linkedList.add(celular7);
        linkedList.add(celular8);
        linkedList.add(celular9);
        linkedList.add(celular10);
        linkedList.add(celular11);
        linkedList.add(celular12);
        linkedList.add(celular13);
        linkedList.add(celular14);
        linkedList.add(celular15);
        linkedList.add(celular16);
        linkedList.add(celular17);
        linkedList.add(celular18);
        linkedList.add(celular19);
        linkedList.add(celular20);
        linkedList.add(celular21);
        linkedList.add(celular22);
        linkedList.add(celular23);
        linkedList.add(celular24);
        linkedList.add(celular25);
        linkedList.add(celular26);
        linkedList.add(celular27);
        linkedList.add(celular28);
        linkedList.add(celular29);
        linkedList.add(celular30);
        linkedList.add(celular31);
        linkedList.add(celular32);
        linkedList.add(celular33);
        linkedList.add(celular34);
        linkedList.add(celular35);
        linkedList.add(celular36);
        linkedList.add(celular37);
        linkedList.add(celular38);
        linkedList.add(celular39);
        linkedList.add(celular40);
        linkedList.add(celular41);
        linkedList.add(celular42);
        linkedList.add(celular43);
        linkedList.add(celular44);
        linkedList.add(celular45);
        linkedList.add(celular46);
        linkedList.add(celular47);
        linkedList.add(celular48);
        linkedList.add(celular49);
        linkedList.add(celular50);
        tempo = System.nanoTime() - inicio;
        listaTempo.put(tempo, "Adicionando com LinkedList");

        inicio = System.nanoTime();
        System.out.println(linkedList);
        tempo = System.nanoTime() - inicio;
        listaTempo.put(tempo, "Imprimindo com LinkedList");


        //Set


        //HashSet
        HashSet<Celular> hashSet = new HashSet<>();
        inicio = System.nanoTime();
        hashSet.add(celular1);
        hashSet.add(celular2);
        hashSet.add(celular3);
        hashSet.add(celular4);
        hashSet.add(celular5);
        hashSet.add(celular6);
        hashSet.add(celular7);
        hashSet.add(celular8);
        hashSet.add(celular9);
        hashSet.add(celular10);
        hashSet.add(celular11);
        hashSet.add(celular12);
        hashSet.add(celular13);
        hashSet.add(celular14);
        hashSet.add(celular15);
        hashSet.add(celular16);
        hashSet.add(celular17);
        hashSet.add(celular18);
        hashSet.add(celular19);
        hashSet.add(celular20);
        hashSet.add(celular21);
        hashSet.add(celular22);
        hashSet.add(celular23);
        hashSet.add(celular24);
        hashSet.add(celular25);
        hashSet.add(celular26);
        hashSet.add(celular27);
        hashSet.add(celular28);
        hashSet.add(celular29);
        hashSet.add(celular30);
        hashSet.add(celular31);
        hashSet.add(celular32);
        hashSet.add(celular33);
        hashSet.add(celular34);
        hashSet.add(celular35);
        hashSet.add(celular36);
        hashSet.add(celular37);
        hashSet.add(celular38);
        hashSet.add(celular39);
        hashSet.add(celular40);
        hashSet.add(celular41);
        hashSet.add(celular42);
        hashSet.add(celular43);
        hashSet.add(celular44);
        hashSet.add(celular45);
        hashSet.add(celular46);
        hashSet.add(celular47);
        hashSet.add(celular48);
        hashSet.add(celular49);
        hashSet.add(celular50);
        tempo = System.nanoTime() - inicio;
        listaTempo.put(tempo, "Adicionando com HashSet");

        inicio = System.nanoTime();
        System.out.println(hashSet);
        tempo = System.nanoTime() - inicio;
        listaTempo.put(tempo, "Imprimindo com HashSet");


        //LinkedHashSet
        LinkedHashSet<Celular> linkedHashSet = new LinkedHashSet<>();
        inicio = System.nanoTime();
        linkedHashSet.add(celular1);
        linkedHashSet.add(celular2);
        linkedHashSet.add(celular3);
        linkedHashSet.add(celular4);
        linkedHashSet.add(celular5);
        linkedHashSet.add(celular6);
        linkedHashSet.add(celular7);
        linkedHashSet.add(celular8);
        linkedHashSet.add(celular9);
        linkedHashSet.add(celular10);
        linkedHashSet.add(celular11);
        linkedHashSet.add(celular12);
        linkedHashSet.add(celular13);
        linkedHashSet.add(celular14);
        linkedHashSet.add(celular15);
        linkedHashSet.add(celular16);
        linkedHashSet.add(celular17);
        linkedHashSet.add(celular18);
        linkedHashSet.add(celular19);
        linkedHashSet.add(celular20);
        linkedHashSet.add(celular21);
        linkedHashSet.add(celular22);
        linkedHashSet.add(celular23);
        linkedHashSet.add(celular24);
        linkedHashSet.add(celular25);
        linkedHashSet.add(celular26);
        linkedHashSet.add(celular27);
        linkedHashSet.add(celular28);
        linkedHashSet.add(celular29);
        linkedHashSet.add(celular30);
        linkedHashSet.add(celular31);
        linkedHashSet.add(celular32);
        linkedHashSet.add(celular33);
        linkedHashSet.add(celular34);
        linkedHashSet.add(celular35);
        linkedHashSet.add(celular36);
        linkedHashSet.add(celular37);
        linkedHashSet.add(celular38);
        linkedHashSet.add(celular39);
        linkedHashSet.add(celular40);
        linkedHashSet.add(celular41);
        linkedHashSet.add(celular42);
        linkedHashSet.add(celular43);
        linkedHashSet.add(celular44);
        linkedHashSet.add(celular45);
        linkedHashSet.add(celular46);
        linkedHashSet.add(celular47);
        linkedHashSet.add(celular48);
        linkedHashSet.add(celular49);
        linkedHashSet.add(celular50);
        tempo = System.nanoTime() - inicio;
        listaTempo.put(tempo, "Adicionando com LinkedHashSet");

        inicio = System.nanoTime();
        System.out.println(linkedHashSet);
        tempo = System.nanoTime() - inicio;
        listaTempo.put(tempo, "Imprimindo com LinkedHashSet");


        //TreeSet
        TreeSet<Celular> treeSet = new TreeSet<>();
        inicio = System.nanoTime();
        treeSet.add(celular1);
        treeSet.add(celular2);
        treeSet.add(celular3);
        treeSet.add(celular4);
        treeSet.add(celular5);
        treeSet.add(celular6);
        treeSet.add(celular7);
        treeSet.add(celular8);
        treeSet.add(celular9);
        treeSet.add(celular10);
        treeSet.add(celular11);
        treeSet.add(celular12);
        treeSet.add(celular13);
        treeSet.add(celular14);
        treeSet.add(celular15);
        treeSet.add(celular16);
        treeSet.add(celular17);
        treeSet.add(celular18);
        treeSet.add(celular19);
        treeSet.add(celular20);
        treeSet.add(celular21);
        treeSet.add(celular22);
        treeSet.add(celular23);
        treeSet.add(celular24);
        treeSet.add(celular25);
        treeSet.add(celular26);
        treeSet.add(celular27);
        treeSet.add(celular28);
        treeSet.add(celular29);
        treeSet.add(celular30);
        treeSet.add(celular31);
        treeSet.add(celular32);
        treeSet.add(celular33);
        treeSet.add(celular34);
        treeSet.add(celular35);
        treeSet.add(celular36);
        treeSet.add(celular37);
        treeSet.add(celular38);
        treeSet.add(celular39);
        treeSet.add(celular40);
        treeSet.add(celular41);
        treeSet.add(celular42);
        treeSet.add(celular43);
        treeSet.add(celular44);
        treeSet.add(celular45);
        treeSet.add(celular46);
        treeSet.add(celular47);
        treeSet.add(celular48);
        treeSet.add(celular49);
        treeSet.add(celular50);
        tempo = System.nanoTime() - inicio;
        listaTempo.put(tempo, "Adicionando com TreeSet");

        inicio = System.nanoTime();
        System.out.println(treeSet);
        tempo = System.nanoTime() - inicio;
        listaTempo.put(tempo, "Imprimindo com TreeSet");


        //Map


        //HashMap
        HashMap<Integer, Celular> hashMap = new HashMap();
        inicio = System.nanoTime();
        hashMap.put(celular1.getId(), celular1);
        hashMap.put(celular2.getId(), celular2);
        hashMap.put(celular3.getId(), celular3);
        hashMap.put(celular4.getId(), celular4);
        hashMap.put(celular5.getId(), celular5);
        hashMap.put(celular6.getId(), celular6);
        hashMap.put(celular7.getId(), celular7);
        hashMap.put(celular8.getId(), celular8);
        hashMap.put(celular9.getId(), celular9);
        hashMap.put(celular10.getId(), celular10);
        hashMap.put(celular11.getId(), celular11);
        hashMap.put(celular12.getId(), celular12);
        hashMap.put(celular13.getId(), celular13);
        hashMap.put(celular14.getId(), celular14);
        hashMap.put(celular15.getId(), celular15);
        hashMap.put(celular16.getId(), celular16);
        hashMap.put(celular17.getId(), celular17);
        hashMap.put(celular18.getId(), celular18);
        hashMap.put(celular19.getId(), celular19);
        hashMap.put(celular20.getId(), celular20);
        hashMap.put(celular21.getId(), celular21);
        hashMap.put(celular22.getId(), celular22);
        hashMap.put(celular23.getId(), celular23);
        hashMap.put(celular24.getId(), celular24);
        hashMap.put(celular25.getId(), celular25);
        hashMap.put(celular26.getId(), celular26);
        hashMap.put(celular27.getId(), celular27);
        hashMap.put(celular28.getId(), celular28);
        hashMap.put(celular29.getId(), celular29);
        hashMap.put(celular30.getId(), celular30);
        hashMap.put(celular31.getId(), celular31);
        hashMap.put(celular32.getId(), celular32);
        hashMap.put(celular33.getId(), celular33);
        hashMap.put(celular34.getId(), celular34);
        hashMap.put(celular35.getId(), celular35);
        hashMap.put(celular36.getId(), celular36);
        hashMap.put(celular37.getId(), celular37);
        hashMap.put(celular38.getId(), celular38);
        hashMap.put(celular39.getId(), celular39);
        hashMap.put(celular40.getId(), celular40);
        hashMap.put(celular41.getId(), celular41);
        hashMap.put(celular42.getId(), celular42);
        hashMap.put(celular43.getId(), celular43);
        hashMap.put(celular44.getId(), celular44);
        hashMap.put(celular45.getId(), celular45);
        hashMap.put(celular46.getId(), celular46);
        hashMap.put(celular47.getId(), celular47);
        hashMap.put(celular48.getId(), celular48);
        hashMap.put(celular49.getId(), celular49);
        hashMap.put(celular50.getId(), celular50);
        tempo = System.nanoTime() - inicio;
        listaTempo.put(tempo, "Adicionando com HashMap");

        inicio = System.nanoTime();
        System.out.println(hashMap);
        tempo = System.nanoTime() - inicio;
        listaTempo.put(tempo, "Imprimindo com HashMap");

        //LinkedMap
        LinkedHashMap<Integer, Celular> linkedHashMap = new LinkedHashMap<>();
        inicio = System.nanoTime();
        linkedHashMap.put(celular1.getId(), celular1);
        linkedHashMap.put(celular2.getId(), celular2);
        linkedHashMap.put(celular3.getId(), celular3);
        linkedHashMap.put(celular4.getId(), celular4);
        linkedHashMap.put(celular5.getId(), celular5);
        linkedHashMap.put(celular6.getId(), celular6);
        linkedHashMap.put(celular7.getId(), celular7);
        linkedHashMap.put(celular8.getId(), celular8);
        linkedHashMap.put(celular9.getId(), celular9);
        linkedHashMap.put(celular10.getId(), celular10);
        linkedHashMap.put(celular11.getId(), celular11);
        linkedHashMap.put(celular12.getId(), celular12);
        linkedHashMap.put(celular13.getId(), celular13);
        linkedHashMap.put(celular14.getId(), celular14);
        linkedHashMap.put(celular15.getId(), celular15);
        linkedHashMap.put(celular16.getId(), celular16);
        linkedHashMap.put(celular17.getId(), celular17);
        linkedHashMap.put(celular18.getId(), celular18);
        linkedHashMap.put(celular19.getId(), celular19);
        linkedHashMap.put(celular20.getId(), celular20);
        linkedHashMap.put(celular21.getId(), celular21);
        linkedHashMap.put(celular22.getId(), celular22);
        linkedHashMap.put(celular23.getId(), celular23);
        linkedHashMap.put(celular24.getId(), celular24);
        linkedHashMap.put(celular25.getId(), celular25);
        linkedHashMap.put(celular26.getId(), celular26);
        linkedHashMap.put(celular27.getId(), celular27);
        linkedHashMap.put(celular28.getId(), celular28);
        linkedHashMap.put(celular29.getId(), celular29);
        linkedHashMap.put(celular30.getId(), celular30);
        linkedHashMap.put(celular31.getId(), celular31);
        linkedHashMap.put(celular32.getId(), celular32);
        linkedHashMap.put(celular33.getId(), celular33);
        linkedHashMap.put(celular34.getId(), celular34);
        linkedHashMap.put(celular35.getId(), celular35);
        linkedHashMap.put(celular36.getId(), celular36);
        linkedHashMap.put(celular37.getId(), celular37);
        linkedHashMap.put(celular38.getId(), celular38);
        linkedHashMap.put(celular39.getId(), celular39);
        linkedHashMap.put(celular40.getId(), celular40);
        linkedHashMap.put(celular41.getId(), celular41);
        linkedHashMap.put(celular42.getId(), celular42);
        linkedHashMap.put(celular43.getId(), celular43);
        linkedHashMap.put(celular44.getId(), celular44);
        linkedHashMap.put(celular45.getId(), celular45);
        linkedHashMap.put(celular46.getId(), celular46);
        linkedHashMap.put(celular47.getId(), celular47);
        linkedHashMap.put(celular48.getId(), celular48);
        linkedHashMap.put(celular49.getId(), celular49);
        linkedHashMap.put(celular50.getId(), celular50);
        tempo = System.nanoTime() - inicio;
        listaTempo.put(tempo, "Adicionando com LinkedHashMap");

        inicio = System.nanoTime();
        System.out.println(linkedHashMap);
        tempo = System.nanoTime() - inicio;
        listaTempo.put(tempo, "Imprimindo com LinkedHashMap");

        //TreeMap
        TreeMap<Integer, Celular> treeMap = new TreeMap<>();
        inicio = System.nanoTime();
        treeMap.put(celular1.getId(), celular1);
        treeMap.put(celular2.getId(), celular2);
        treeMap.put(celular3.getId(), celular3);
        treeMap.put(celular4.getId(), celular4);
        treeMap.put(celular5.getId(), celular5);
        treeMap.put(celular6.getId(), celular6);
        treeMap.put(celular7.getId(), celular7);
        treeMap.put(celular8.getId(), celular8);
        treeMap.put(celular9.getId(), celular9);
        treeMap.put(celular10.getId(), celular10);
        treeMap.put(celular11.getId(), celular11);
        treeMap.put(celular12.getId(), celular12);
        treeMap.put(celular13.getId(), celular13);
        treeMap.put(celular14.getId(), celular14);
        treeMap.put(celular15.getId(), celular15);
        treeMap.put(celular16.getId(), celular16);
        treeMap.put(celular17.getId(), celular17);
        treeMap.put(celular18.getId(), celular18);
        treeMap.put(celular19.getId(), celular19);
        treeMap.put(celular20.getId(), celular20);
        treeMap.put(celular21.getId(), celular21);
        treeMap.put(celular22.getId(), celular22);
        treeMap.put(celular23.getId(), celular23);
        treeMap.put(celular24.getId(), celular24);
        treeMap.put(celular25.getId(), celular25);
        treeMap.put(celular26.getId(), celular26);
        treeMap.put(celular27.getId(), celular27);
        treeMap.put(celular28.getId(), celular28);
        treeMap.put(celular29.getId(), celular29);
        treeMap.put(celular30.getId(), celular30);
        treeMap.put(celular31.getId(), celular31);
        treeMap.put(celular32.getId(), celular32);
        treeMap.put(celular33.getId(), celular33);
        treeMap.put(celular34.getId(), celular34);
        treeMap.put(celular35.getId(), celular35);
        treeMap.put(celular36.getId(), celular36);
        treeMap.put(celular37.getId(), celular37);
        treeMap.put(celular38.getId(), celular38);
        treeMap.put(celular39.getId(), celular39);
        treeMap.put(celular40.getId(), celular40);
        treeMap.put(celular41.getId(), celular41);
        treeMap.put(celular42.getId(), celular42);
        treeMap.put(celular43.getId(), celular43);
        treeMap.put(celular44.getId(), celular44);
        treeMap.put(celular45.getId(), celular45);
        treeMap.put(celular46.getId(), celular46);
        treeMap.put(celular47.getId(), celular47);
        treeMap.put(celular48.getId(), celular48);
        treeMap.put(celular49.getId(), celular49);
        treeMap.put(celular50.getId(), celular50);
        tempo = System.nanoTime() - inicio;
        listaTempo.put(tempo, "Adicionando com TreeMap");

        inicio = System.nanoTime();
        System.out.println(treeMap);
        tempo = System.nanoTime() - inicio;
        listaTempo.put(tempo, "Imprimindo com TreeMap");


        System.out.println(listaTempo);


    }
}
